/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface Coin {
  parentCoinInfo: Buffer
  puzzleHash: Buffer
  amount: bigint
}
export interface CoinSpend {
  coin: Coin
  puzzleReveal: Buffer
  solution: Buffer
}
export interface LineageProof {
  parentParentCoinId: Buffer
  parentInnerPuzzleHash: Buffer
  parentAmount: bigint
}
export interface EveProof {
  parentCoinInfo: Buffer
  amount: bigint
}
export interface Proof {
  lineageProof?: LineageProof
  eveProof?: EveProof
}
export declare function newLineageProof(lineageProof: LineageProof): Proof
export declare function newEveProof(eveProof: EveProof): Proof
export interface DataStoreMetadata {
  rootHash: Buffer
  label: string
  description: string
}
export interface DelegatedPuzzleInfo {
  adminInnerPuzzleHash?: Buffer
  writerInnerPuzzleHash?: Buffer
  oraclePaymentPuzzleHash?: Buffer
  oracleFee?: bigint
}
export interface DelegatedPuzzle {
  puzzleHash: Buffer
  puzzleInfo: DelegatedPuzzleInfo
}
export interface DataStoreInfo {
  coin: Coin
  launcherId: Buffer
  proof: Proof
  metadata: DataStoreMetadata
  ownerPuzzleHash: Buffer
  delegatedPuzzles: Array<DelegatedPuzzle>
}
export interface SuccessResponse {
  coinSpends: Array<CoinSpend>
  newInfo: DataStoreInfo
}
export declare class Tls {
  constructor(certPath: string, keyPath: string)
}
export declare class Peer {
  static new(nodeUri: string, networkId: string, tls: Tls): Promise<Peer>
  mintStore(minterSyntheticKey: Buffer, minterPhMinHeight: number, rootHash: Buffer, label: string, description: string, ownerPuzzleHash: Buffer, delegatedPuzzles: Array<DelegatedPuzzle>, fee: bigint): Promise<SuccessResponse>
}
